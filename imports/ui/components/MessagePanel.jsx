import React, { Component } from 'react';

//messages
import { messages } from '../../lib/client/messages.js';

/**
 * Component for showing the messages
 */
export default class MessagePanel extends Component {

    /**
     * @constructor
     */
    constructor(props) {
        super(props);

        this.generatedMessage = this.generatedMessage.bind(this);
        this.staticMessage = this.staticMessage.bind(this);
    }

    /**
     * Function for messages generated by appbot
     *
     * @return {Object}
     */
    generatedMessage(){
        //get message type
        let type = this.props.message.type;
        //get message text
        let text = this.props.message.text;

        //loading icon only for message type info
        let loading = "";
        if (type==="loading") {
            loading = <span className="loading"></span>;
        }

        return(
            <div className={'alert '+type}>
                <strong>{type}</strong> {text} {loading}
            </div>
        );
    }

    /**
     * Function for static messages from messages list
     *
     * @return {Object}
     */
    staticMessage(){
        //size of message
        let size = this.props.size=="big" ? "big" : "small";
        //get message type
        let type = messages[this.props.message].type;
        //get message text
        let text = messages[this.props.message].text;

        return(
            <div className={type == "message" ? 'message ' + size : 'alert ' + size + " " + type}>
                <strong>{type}</strong> {text}
            </div>
        );
    }

    render() {
        //if message props is not empty
        if (this.props.message != "") {
            //appbot generated or static message
            if(this.props.message.gen === "appbot"){
                return this.generatedMessage();
            } else {
                return this.staticMessage();
            }
        } else {
            return(null);
        }
    }
}

/**
 * Props message
 * Props size
 */
MessagePanel.propTypes = {
    message: React.PropTypes.oneOfType([
        React.PropTypes.string,
        React.PropTypes.shape({
            type: React.PropTypes.string,
            text: React.PropTypes.string,
            gen: React.PropTypes.oneOf(['appbot', undefined]),
        })
    ]),
    size: React.PropTypes.oneOf(['small', 'big'])
};